//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace InkeServer.DataMapping
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Bas_ActivityImages> Bas_ActivityImages { get; set; }
        public virtual DbSet<Bas_AppClients> Bas_AppClients { get; set; }
        public virtual DbSet<Bas_AutoPromotion> Bas_AutoPromotion { get; set; }
        public virtual DbSet<Bas_AutoPromotionTime> Bas_AutoPromotionTime { get; set; }
        public virtual DbSet<Bas_BonusRecord> Bas_BonusRecord { get; set; }
        public virtual DbSet<Bas_BonusSet> Bas_BonusSet { get; set; }
        public virtual DbSet<Bas_BossReport> Bas_BossReport { get; set; }
        public virtual DbSet<Bas_Card> Bas_Card { get; set; }
        public virtual DbSet<Bas_CardBatch> Bas_CardBatch { get; set; }
        public virtual DbSet<Bas_CardDiscountType> Bas_CardDiscountType { get; set; }
        public virtual DbSet<Bas_ComboGroup> Bas_ComboGroup { get; set; }
        public virtual DbSet<Bas_ComboProduct> Bas_ComboProduct { get; set; }
        public virtual DbSet<Bas_Coupon> Bas_Coupon { get; set; }
        public virtual DbSet<Bas_DeliveryAddress> Bas_DeliveryAddress { get; set; }
        public virtual DbSet<Bas_GivenCoupon> Bas_GivenCoupon { get; set; }
        public virtual DbSet<Bas_IntegralProducts> Bas_IntegralProducts { get; set; }
        public virtual DbSet<Bas_MarketingAnalyze> Bas_MarketingAnalyze { get; set; }
        public virtual DbSet<Bas_Member> Bas_Member { get; set; }
        public virtual DbSet<Bas_Merchant> Bas_Merchant { get; set; }
        public virtual DbSet<Bas_MerchantBaseInfo> Bas_MerchantBaseInfo { get; set; }
        public virtual DbSet<Bas_MerchantConfig> Bas_MerchantConfig { get; set; }
        public virtual DbSet<Bas_MerchantPosition> Bas_MerchantPosition { get; set; }
        public virtual DbSet<Bas_MerchantProducts> Bas_MerchantProducts { get; set; }
        public virtual DbSet<Bas_ProductCombo> Bas_ProductCombo { get; set; }
        public virtual DbSet<Bas_Shop> Bas_Shop { get; set; }
        public virtual DbSet<Bas_ShopEmployee> Bas_ShopEmployee { get; set; }
        public virtual DbSet<Bas_ShopIntegralProducts> Bas_ShopIntegralProducts { get; set; }
        public virtual DbSet<Bas_ShopPositionPower> Bas_ShopPositionPower { get; set; }
        public virtual DbSet<Bas_ShopProducts> Bas_ShopProducts { get; set; }
        public virtual DbSet<Bas_ShopSeat> Bas_ShopSeat { get; set; }
        public virtual DbSet<Bas_ShopSeatClass> Bas_ShopSeatClass { get; set; }
        public virtual DbSet<Bas_SmsTemplateCustom> Bas_SmsTemplateCustom { get; set; }
        public virtual DbSet<Bas_UsableShop> Bas_UsableShop { get; set; }
        public virtual DbSet<Bas_User> Bas_User { get; set; }
        public virtual DbSet<Bas_UserAddress> Bas_UserAddress { get; set; }
        public virtual DbSet<Bas_WeChat> Bas_WeChat { get; set; }
        public virtual DbSet<Bas_WeChatOpenID> Bas_WeChatOpenID { get; set; }
        public virtual DbSet<Bas_WeChatToken> Bas_WeChatToken { get; set; }
        public virtual DbSet<BizSeqNos> BizSeqNos { get; set; }
        public virtual DbSet<Bus_Advance> Bus_Advance { get; set; }
        public virtual DbSet<Bus_AppInstruction> Bus_AppInstruction { get; set; }
        public virtual DbSet<Bus_Arrears> Bus_Arrears { get; set; }
        public virtual DbSet<Bus_AutoPromotionRecord> Bus_AutoPromotionRecord { get; set; }
        public virtual DbSet<Bus_BackOrders> Bus_BackOrders { get; set; }
        public virtual DbSet<Bus_BalanceChange> Bus_BalanceChange { get; set; }
        public virtual DbSet<Bus_BookBasket> Bus_BookBasket { get; set; }
        public virtual DbSet<Bus_BookOrders> Bus_BookOrders { get; set; }
        public virtual DbSet<Bus_CardCoupon> Bus_CardCoupon { get; set; }
        public virtual DbSet<Bus_CardRechargeRecord> Bus_CardRechargeRecord { get; set; }
        public virtual DbSet<Bus_CouponRechargeRecord> Bus_CouponRechargeRecord { get; set; }
        public virtual DbSet<Bus_IntegralAdjust> Bus_IntegralAdjust { get; set; }
        public virtual DbSet<Bus_IntegralChange> Bus_IntegralChange { get; set; }
        public virtual DbSet<Bus_IntegralExchange> Bus_IntegralExchange { get; set; }
        public virtual DbSet<Bus_MarketingAnalyzeRecord> Bus_MarketingAnalyzeRecord { get; set; }
        public virtual DbSet<Bus_OrderBasket> Bus_OrderBasket { get; set; }
        public virtual DbSet<Bus_OrderDeliverys> Bus_OrderDeliverys { get; set; }
        public virtual DbSet<Bus_OrderPay> Bus_OrderPay { get; set; }
        public virtual DbSet<Bus_Orders> Bus_Orders { get; set; }
        public virtual DbSet<Bus_Reservation> Bus_Reservation { get; set; }
        public virtual DbSet<Bus_ReservationBasket> Bus_ReservationBasket { get; set; }
        public virtual DbSet<Bus_Sms> Bus_Sms { get; set; }
        public virtual DbSet<Bus_SmsBusiness> Bus_SmsBusiness { get; set; }
        public virtual DbSet<Bus_SmsMember> Bus_SmsMember { get; set; }
        public virtual DbSet<Bus_SmsYZM> Bus_SmsYZM { get; set; }
        public virtual DbSet<bus_SmsYZMRecord> bus_SmsYZMRecord { get; set; }
        public virtual DbSet<Bus_ThirdPay> Bus_ThirdPay { get; set; }
        public virtual DbSet<Log_CardOperationLogs> Log_CardOperationLogs { get; set; }
        public virtual DbSet<Log_MerchantLog> Log_MerchantLog { get; set; }
        public virtual DbSet<Log_SysLog> Log_SysLog { get; set; }
        public virtual DbSet<Mob_Activity> Mob_Activity { get; set; }
        public virtual DbSet<Mob_CardApply> Mob_CardApply { get; set; }
        public virtual DbSet<Sys_Admins> Sys_Admins { get; set; }
        public virtual DbSet<Sys_Area> Sys_Area { get; set; }
        public virtual DbSet<Sys_BaseInfo> Sys_BaseInfo { get; set; }
        public virtual DbSet<Sys_BonusClass> Sys_BonusClass { get; set; }
        public virtual DbSet<Sys_City> Sys_City { get; set; }
        public virtual DbSet<Sys_CommerceGroup> Sys_CommerceGroup { get; set; }
        public virtual DbSet<Sys_MenuFunction> Sys_MenuFunction { get; set; }
        public virtual DbSet<Sys_MerchantContract> Sys_MerchantContract { get; set; }
        public virtual DbSet<Sys_MerchantModule> Sys_MerchantModule { get; set; }
        public virtual DbSet<Sys_Power> Sys_Power { get; set; }
        public virtual DbSet<Sys_SystemModule> Sys_SystemModule { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Bas_CommerceGroup> Bas_CommerceGroup { get; set; }
        public virtual DbSet<Bas_MemberAddress> Bas_MemberAddress { get; set; }
        public virtual DbSet<Sys_MerchantClass> Sys_MerchantClass { get; set; }
        public virtual DbSet<Sys_Province> Sys_Province { get; set; }
        public virtual DbSet<Sys_SmsTemplate> Sys_SmsTemplate { get; set; }
        public virtual DbSet<IBoxPaySerial> IBoxPaySerial { get; set; }
        public virtual DbSet<Bus_BookOrderPay> Bus_BookOrderPay { get; set; }
        public virtual DbSet<Bas_MerchantImg> Bas_MerchantImg { get; set; }
        public virtual DbSet<Bas_ProductStorage> Bas_ProductStorage { get; set; }
        public virtual DbSet<Bas_ProductStorageBatch> Bas_ProductStorageBatch { get; set; }
        public virtual DbSet<Bas_Account> Bas_Account { get; set; }
    
        [DbFunction("Entities", "CalcArrears")]
        public virtual IQueryable<CalcArrears_Result> CalcArrears(Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime, string merchantid, string shopids, Nullable<int> timetype)
        {
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var timetypeParameter = timetype.HasValue ?
                new ObjectParameter("timetype", timetype) :
                new ObjectParameter("timetype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CalcArrears_Result>("[Entities].[CalcArrears](@begintime, @endtime, @merchantid, @shopids, @timetype)", begintimeParameter, endtimeParameter, merchantidParameter, shopidsParameter, timetypeParameter);
        }
    
        [DbFunction("Entities", "CalcCardRecharge")]
        public virtual IQueryable<CalcCardRecharge_Result> CalcCardRecharge(Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime, string merchantid, string shopids, Nullable<int> timetype)
        {
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var timetypeParameter = timetype.HasValue ?
                new ObjectParameter("timetype", timetype) :
                new ObjectParameter("timetype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CalcCardRecharge_Result>("[Entities].[CalcCardRecharge](@begintime, @endtime, @merchantid, @shopids, @timetype)", begintimeParameter, endtimeParameter, merchantidParameter, shopidsParameter, timetypeParameter);
        }
    
        [DbFunction("Entities", "CalcConsumption")]
        public virtual IQueryable<CalcConsumption_Result> CalcConsumption(Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime, string merchantid, string shopids, Nullable<int> timetype)
        {
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var timetypeParameter = timetype.HasValue ?
                new ObjectParameter("timetype", timetype) :
                new ObjectParameter("timetype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CalcConsumption_Result>("[Entities].[CalcConsumption](@begintime, @endtime, @merchantid, @shopids, @timetype)", begintimeParameter, endtimeParameter, merchantidParameter, shopidsParameter, timetypeParameter);
        }
    
        [DbFunction("Entities", "CalcCustomerStream")]
        public virtual IQueryable<CalcCustomerStream_Result> CalcCustomerStream(string merchantid, string shopids, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CalcCustomerStream_Result>("[Entities].[CalcCustomerStream](@merchantid, @shopids, @begintime, @endtime)", merchantidParameter, shopidsParameter, begintimeParameter, endtimeParameter);
        }
    
        [DbFunction("Entities", "CalcCustomerStreamByAge")]
        public virtual IQueryable<CalcCustomerStreamByAge_Result> CalcCustomerStreamByAge(Nullable<int> min, Nullable<int> max, Nullable<int> range, string merchantid, string shopids, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var minParameter = min.HasValue ?
                new ObjectParameter("min", min) :
                new ObjectParameter("min", typeof(int));
    
            var maxParameter = max.HasValue ?
                new ObjectParameter("max", max) :
                new ObjectParameter("max", typeof(int));
    
            var rangeParameter = range.HasValue ?
                new ObjectParameter("range", range) :
                new ObjectParameter("range", typeof(int));
    
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CalcCustomerStreamByAge_Result>("[Entities].[CalcCustomerStreamByAge](@min, @max, @range, @merchantid, @shopids, @begintime, @endtime)", minParameter, maxParameter, rangeParameter, merchantidParameter, shopidsParameter, begintimeParameter, endtimeParameter);
        }
    
        [DbFunction("Entities", "CalcCustomerStreamBySex")]
        public virtual IQueryable<CalcCustomerStreamBySex_Result> CalcCustomerStreamBySex(string merchantid, string shopids, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CalcCustomerStreamBySex_Result>("[Entities].[CalcCustomerStreamBySex](@merchantid, @shopids, @begintime, @endtime)", merchantidParameter, shopidsParameter, begintimeParameter, endtimeParameter);
        }
    
        [DbFunction("Entities", "CalcDiscountDeduction")]
        public virtual IQueryable<CalcDiscountDeduction_Result> CalcDiscountDeduction(Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime, string merchantid, string shopids, Nullable<int> timetype)
        {
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var timetypeParameter = timetype.HasValue ?
                new ObjectParameter("timetype", timetype) :
                new ObjectParameter("timetype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CalcDiscountDeduction_Result>("[Entities].[CalcDiscountDeduction](@begintime, @endtime, @merchantid, @shopids, @timetype)", begintimeParameter, endtimeParameter, merchantidParameter, shopidsParameter, timetypeParameter);
        }
    
        [DbFunction("Entities", "CalcPayByType")]
        public virtual IQueryable<CalcPayByType_Result> CalcPayByType(Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime, string merchantid, string shopids, Nullable<int> timetype)
        {
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var timetypeParameter = timetype.HasValue ?
                new ObjectParameter("timetype", timetype) :
                new ObjectParameter("timetype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CalcPayByType_Result>("[Entities].[CalcPayByType](@begintime, @endtime, @merchantid, @shopids, @timetype)", begintimeParameter, endtimeParameter, merchantidParameter, shopidsParameter, timetypeParameter);
        }
    
        [DbFunction("Entities", "CalcPeopleAndAVG")]
        public virtual IQueryable<CalcPeopleAndAVG_Result> CalcPeopleAndAVG(Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime, string merchantid, string shopids, Nullable<int> timetype)
        {
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var timetypeParameter = timetype.HasValue ?
                new ObjectParameter("timetype", timetype) :
                new ObjectParameter("timetype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CalcPeopleAndAVG_Result>("[Entities].[CalcPeopleAndAVG](@begintime, @endtime, @merchantid, @shopids, @timetype)", begintimeParameter, endtimeParameter, merchantidParameter, shopidsParameter, timetypeParameter);
        }
    
        [DbFunction("Entities", "CalcProductPrice")]
        public virtual IQueryable<CalcProductPrice_Result> CalcProductPrice(Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime, string merchantid, string shopids, Nullable<int> timetype)
        {
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var timetypeParameter = timetype.HasValue ?
                new ObjectParameter("timetype", timetype) :
                new ObjectParameter("timetype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CalcProductPrice_Result>("[Entities].[CalcProductPrice](@begintime, @endtime, @merchantid, @shopids, @timetype)", begintimeParameter, endtimeParameter, merchantidParameter, shopidsParameter, timetypeParameter);
        }
    
        [DbFunction("Entities", "CalcTurnover")]
        public virtual IQueryable<CalcTurnover_Result> CalcTurnover(string merchantid, string shopids, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CalcTurnover_Result>("[Entities].[CalcTurnover](@merchantid, @shopids, @begintime, @endtime)", merchantidParameter, shopidsParameter, begintimeParameter, endtimeParameter);
        }
    
        [DbFunction("Entities", "CalcTurnoverByAge")]
        public virtual IQueryable<CalcTurnoverByAge_Result> CalcTurnoverByAge(Nullable<int> min, Nullable<int> max, Nullable<int> range, string merchantid, string shopids, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var minParameter = min.HasValue ?
                new ObjectParameter("min", min) :
                new ObjectParameter("min", typeof(int));
    
            var maxParameter = max.HasValue ?
                new ObjectParameter("max", max) :
                new ObjectParameter("max", typeof(int));
    
            var rangeParameter = range.HasValue ?
                new ObjectParameter("range", range) :
                new ObjectParameter("range", typeof(int));
    
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CalcTurnoverByAge_Result>("[Entities].[CalcTurnoverByAge](@min, @max, @range, @merchantid, @shopids, @begintime, @endtime)", minParameter, maxParameter, rangeParameter, merchantidParameter, shopidsParameter, begintimeParameter, endtimeParameter);
        }
    
        [DbFunction("Entities", "CalcTurnoverBySex")]
        public virtual IQueryable<CalcTurnoverBySex_Result> CalcTurnoverBySex(string merchantid, string shopids, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CalcTurnoverBySex_Result>("[Entities].[CalcTurnoverBySex](@merchantid, @shopids, @begintime, @endtime)", merchantidParameter, shopidsParameter, begintimeParameter, endtimeParameter);
        }
    
        [DbFunction("Entities", "DateSplit")]
        public virtual IQueryable<DateSplit_Result> DateSplit(Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime, Nullable<double> separator)
        {
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            var separatorParameter = separator.HasValue ?
                new ObjectParameter("separator", separator) :
                new ObjectParameter("separator", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DateSplit_Result>("[Entities].[DateSplit](@begintime, @endtime, @separator)", begintimeParameter, endtimeParameter, separatorParameter);
        }
    
        [DbFunction("Entities", "DateSplitByDMY")]
        public virtual IQueryable<DateSplitByDMY_Result> DateSplitByDMY(Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime, string type)
        {
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<DateSplitByDMY_Result>("[Entities].[DateSplitByDMY](@begintime, @endtime, @type)", begintimeParameter, endtimeParameter, typeParameter);
        }
    
        [DbFunction("Entities", "NumSplit")]
        public virtual IQueryable<NumSplit_Result> NumSplit(Nullable<int> beginnum, Nullable<int> endnum, Nullable<double> separator)
        {
            var beginnumParameter = beginnum.HasValue ?
                new ObjectParameter("beginnum", beginnum) :
                new ObjectParameter("beginnum", typeof(int));
    
            var endnumParameter = endnum.HasValue ?
                new ObjectParameter("endnum", endnum) :
                new ObjectParameter("endnum", typeof(int));
    
            var separatorParameter = separator.HasValue ?
                new ObjectParameter("separator", separator) :
                new ObjectParameter("separator", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<NumSplit_Result>("[Entities].[NumSplit](@beginnum, @endnum, @separator)", beginnumParameter, endnumParameter, separatorParameter);
        }
    
        [DbFunction("Entities", "StrToTable")]
        public virtual IQueryable<StrToTable_Result> StrToTable(string str)
        {
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StrToTable_Result>("[Entities].[StrToTable](@str)", strParameter);
        }
    
        [DbFunction("Entities", "TimeSplit")]
        public virtual IQueryable<TimeSplit_Result> TimeSplit(Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime, Nullable<double> separator)
        {
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            var separatorParameter = separator.HasValue ?
                new ObjectParameter("separator", separator) :
                new ObjectParameter("separator", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<TimeSplit_Result>("[Entities].[TimeSplit](@begintime, @endtime, @separator)", begintimeParameter, endtimeParameter, separatorParameter);
        }
    
        public virtual ObjectResult<string> Biz_GetSeqNo(string bizSeqType, string terminal)
        {
            var bizSeqTypeParameter = bizSeqType != null ?
                new ObjectParameter("BizSeqType", bizSeqType) :
                new ObjectParameter("BizSeqType", typeof(string));
    
            var terminalParameter = terminal != null ?
                new ObjectParameter("Terminal", terminal) :
                new ObjectParameter("Terminal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Biz_GetSeqNo", bizSeqTypeParameter, terminalParameter);
        }
    
        public virtual ObjectResult<string> Rpt_BossReport(string merchant_ID, string bossReport_ID, Nullable<System.DateTime> startTime, Nullable<System.DateTime> endTime)
        {
            var merchant_IDParameter = merchant_ID != null ?
                new ObjectParameter("Merchant_ID", merchant_ID) :
                new ObjectParameter("Merchant_ID", typeof(string));
    
            var bossReport_IDParameter = bossReport_ID != null ?
                new ObjectParameter("BossReport_ID", bossReport_ID) :
                new ObjectParameter("BossReport_ID", typeof(string));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.DateTime));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Rpt_BossReport", merchant_IDParameter, bossReport_IDParameter, startTimeParameter, endTimeParameter);
        }
    
        public virtual int Rpt_BusinessDates(string merchantid, string shopids, Nullable<double> separator, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var separatorParameter = separator.HasValue ?
                new ObjectParameter("separator", separator) :
                new ObjectParameter("separator", typeof(double));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_BusinessDates", merchantidParameter, shopidsParameter, separatorParameter, begintimeParameter, endtimeParameter);
        }
    
        public virtual int Rpt_BusinessHours(string merchantid, string shopids, Nullable<double> separator, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var separatorParameter = separator.HasValue ?
                new ObjectParameter("separator", separator) :
                new ObjectParameter("separator", typeof(double));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_BusinessHours", merchantidParameter, shopidsParameter, separatorParameter, begintimeParameter, endtimeParameter);
        }
    
        public virtual ObjectResult<Rpt_BusinessTimeSlot_Result> Rpt_BusinessTimeSlot(string merchantid, string shopids, Nullable<double> range, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var rangeParameter = range.HasValue ?
                new ObjectParameter("range", range) :
                new ObjectParameter("range", typeof(double));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_BusinessTimeSlot_Result>("Rpt_BusinessTimeSlot", merchantidParameter, shopidsParameter, rangeParameter, begintimeParameter, endtimeParameter);
        }
    
        public virtual ObjectResult<Rpt_CouponMemoryUsage_Result> Rpt_CouponMemoryUsage(string merchantid, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_CouponMemoryUsage_Result>("Rpt_CouponMemoryUsage", merchantidParameter, begintimeParameter, endtimeParameter);
        }
    
        public virtual ObjectResult<Rpt_CouponMemoryUsageByCouponID_Result> Rpt_CouponMemoryUsageByCouponID(string merchantid, string couponid, string rangetype, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var couponidParameter = couponid != null ?
                new ObjectParameter("couponid", couponid) :
                new ObjectParameter("couponid", typeof(string));
    
            var rangetypeParameter = rangetype != null ?
                new ObjectParameter("rangetype", rangetype) :
                new ObjectParameter("rangetype", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_CouponMemoryUsageByCouponID_Result>("Rpt_CouponMemoryUsageByCouponID", merchantidParameter, couponidParameter, rangetypeParameter, begintimeParameter, endtimeParameter);
        }
    
        public virtual ObjectResult<Rpt_CouponSettlement_Result> Rpt_CouponSettlement(string merchantid, string shopids, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_CouponSettlement_Result>("Rpt_CouponSettlement", merchantidParameter, shopidsParameter, begintimeParameter, endtimeParameter);
        }
    
        public virtual ObjectResult<Rpt_CustomerStreamAnalysis_Result> Rpt_CustomerStreamAnalysis(string merchantid, string shopids, Nullable<int> analysis, Nullable<int> min, Nullable<int> max, Nullable<int> range, string rangetype, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var analysisParameter = analysis.HasValue ?
                new ObjectParameter("analysis", analysis) :
                new ObjectParameter("analysis", typeof(int));
    
            var minParameter = min.HasValue ?
                new ObjectParameter("min", min) :
                new ObjectParameter("min", typeof(int));
    
            var maxParameter = max.HasValue ?
                new ObjectParameter("max", max) :
                new ObjectParameter("max", typeof(int));
    
            var rangeParameter = range.HasValue ?
                new ObjectParameter("range", range) :
                new ObjectParameter("range", typeof(int));
    
            var rangetypeParameter = rangetype != null ?
                new ObjectParameter("rangetype", rangetype) :
                new ObjectParameter("rangetype", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_CustomerStreamAnalysis_Result>("Rpt_CustomerStreamAnalysis", merchantidParameter, shopidsParameter, analysisParameter, minParameter, maxParameter, rangeParameter, rangetypeParameter, begintimeParameter, endtimeParameter);
        }
    
        public virtual ObjectResult<Rpt_MarketingAnalysisByCard_Result> Rpt_MarketingAnalysisByCard(string marketinganalyze_id)
        {
            var marketinganalyze_idParameter = marketinganalyze_id != null ?
                new ObjectParameter("marketinganalyze_id", marketinganalyze_id) :
                new ObjectParameter("marketinganalyze_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_MarketingAnalysisByCard_Result>("Rpt_MarketingAnalysisByCard", marketinganalyze_idParameter);
        }
    
        public virtual ObjectResult<Rpt_MembershipGrowth_Result> Rpt_MembershipGrowth(string merchantid, string shopids, string rangetype, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var rangetypeParameter = rangetype != null ?
                new ObjectParameter("rangetype", rangetype) :
                new ObjectParameter("rangetype", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_MembershipGrowth_Result>("Rpt_MembershipGrowth", merchantidParameter, shopidsParameter, rangetypeParameter, begintimeParameter, endtimeParameter);
        }
    
        public virtual ObjectResult<Rpt_NumberOfDiners_Result> Rpt_NumberOfDiners(string merchantid, string shopids, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_NumberOfDiners_Result>("Rpt_NumberOfDiners", merchantidParameter, shopidsParameter, begintimeParameter, endtimeParameter);
        }
    
        public virtual ObjectResult<Rpt_PayTypeAnalysis_Result> Rpt_PayTypeAnalysis(string merchantid, string shopids, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_PayTypeAnalysis_Result>("Rpt_PayTypeAnalysis", merchantidParameter, shopidsParameter, begintimeParameter, endtimeParameter);
        }
    
        public virtual ObjectResult<Rpt_ProductSalesRanking_Result> Rpt_ProductSalesRanking(string merchantid, string shopids, string types, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime, string sort)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var typesParameter = types != null ?
                new ObjectParameter("types", types) :
                new ObjectParameter("types", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            var sortParameter = sort != null ?
                new ObjectParameter("sort", sort) :
                new ObjectParameter("sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_ProductSalesRanking_Result>("Rpt_ProductSalesRanking", merchantidParameter, shopidsParameter, typesParameter, begintimeParameter, endtimeParameter, sortParameter);
        }
    
        public virtual ObjectResult<Rpt_RechargeDeductionSettlement_Result> Rpt_RechargeDeductionSettlement(string merchantid, string shopids, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_RechargeDeductionSettlement_Result>("Rpt_RechargeDeductionSettlement", merchantidParameter, shopidsParameter, begintimeParameter, endtimeParameter);
        }
    
        public virtual int Rpt_ReportClose(string merchantid, string shopids, Nullable<int> statisticsProduct, string @operator, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var statisticsProductParameter = statisticsProduct.HasValue ?
                new ObjectParameter("statisticsProduct", statisticsProduct) :
                new ObjectParameter("statisticsProduct", typeof(int));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("Operator", @operator) :
                new ObjectParameter("Operator", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_ReportClose", merchantidParameter, shopidsParameter, statisticsProductParameter, operatorParameter, begintimeParameter, endtimeParameter);
        }
    
        public virtual ObjectResult<Rpt_StoreTurnoverAnalysis_Result> Rpt_StoreTurnoverAnalysis(string merchantid, string shopids, Nullable<int> analysis, Nullable<int> min, Nullable<int> max, Nullable<int> range, string rangetype, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var analysisParameter = analysis.HasValue ?
                new ObjectParameter("analysis", analysis) :
                new ObjectParameter("analysis", typeof(int));
    
            var minParameter = min.HasValue ?
                new ObjectParameter("min", min) :
                new ObjectParameter("min", typeof(int));
    
            var maxParameter = max.HasValue ?
                new ObjectParameter("max", max) :
                new ObjectParameter("max", typeof(int));
    
            var rangeParameter = range.HasValue ?
                new ObjectParameter("range", range) :
                new ObjectParameter("range", typeof(int));
    
            var rangetypeParameter = rangetype != null ?
                new ObjectParameter("rangetype", rangetype) :
                new ObjectParameter("rangetype", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_StoreTurnoverAnalysis_Result>("Rpt_StoreTurnoverAnalysis", merchantidParameter, shopidsParameter, analysisParameter, minParameter, maxParameter, rangeParameter, rangetypeParameter, begintimeParameter, endtimeParameter);
        }
    
        public virtual int Rpt_TableTurnoverRate(string merchantid, string shopids, string countType, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var countTypeParameter = countType != null ?
                new ObjectParameter("CountType", countType) :
                new ObjectParameter("CountType", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_TableTurnoverRate", merchantidParameter, shopidsParameter, countTypeParameter, begintimeParameter, endtimeParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> SyncOrderInformation(string orders)
        {
            var ordersParameter = orders != null ?
                new ObjectParameter("Orders", orders) :
                new ObjectParameter("Orders", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SyncOrderInformation", ordersParameter);
        }
    
        public virtual ObjectResult<Rpt_RecordCenterIndex_Result> Rpt_RecordCenterIndex(string merchantid, string shopids, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_RecordCenterIndex_Result>("Rpt_RecordCenterIndex", merchantidParameter, shopidsParameter, begintimeParameter, endtimeParameter);
        }
    
        public virtual ObjectResult<Rpt_ProductSalse_Result> Rpt_ProductSalse(string merchantid, string shopids, string begintime, string endtime, string merchantbaseInfoid, Nullable<int> sorttype)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var begintimeParameter = begintime != null ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(string));
    
            var endtimeParameter = endtime != null ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(string));
    
            var merchantbaseInfoidParameter = merchantbaseInfoid != null ?
                new ObjectParameter("merchantbaseInfoid", merchantbaseInfoid) :
                new ObjectParameter("merchantbaseInfoid", typeof(string));
    
            var sorttypeParameter = sorttype.HasValue ?
                new ObjectParameter("sorttype", sorttype) :
                new ObjectParameter("sorttype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_ProductSalse_Result>("Rpt_ProductSalse", merchantidParameter, shopidsParameter, begintimeParameter, endtimeParameter, merchantbaseInfoidParameter, sorttypeParameter);
        }
    
        public virtual int Rpt_ReportBusiness(string merchantid, string shopids, string begintime, string endtime, string discountid, string sex, string @operator)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var begintimeParameter = begintime != null ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(string));
    
            var endtimeParameter = endtime != null ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(string));
    
            var discountidParameter = discountid != null ?
                new ObjectParameter("discountid", discountid) :
                new ObjectParameter("discountid", typeof(string));
    
            var sexParameter = sex != null ?
                new ObjectParameter("sex", sex) :
                new ObjectParameter("sex", typeof(string));
    
            var operatorParameter = @operator != null ?
                new ObjectParameter("operator", @operator) :
                new ObjectParameter("operator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Rpt_ReportBusiness", merchantidParameter, shopidsParameter, begintimeParameter, endtimeParameter, discountidParameter, sexParameter, operatorParameter);
        }
    
        public virtual int AddMerchantModule(string merchant_ID)
        {
            var merchant_IDParameter = merchant_ID != null ?
                new ObjectParameter("Merchant_ID", merchant_ID) :
                new ObjectParameter("Merchant_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMerchantModule", merchant_IDParameter);
        }
    
        public virtual ObjectResult<Rpt_RecordCenter_Result> Rpt_RecordCenter(string merchantid, string shopids, Nullable<System.DateTime> begintime, Nullable<System.DateTime> endtime)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidsParameter = shopids != null ?
                new ObjectParameter("shopids", shopids) :
                new ObjectParameter("shopids", typeof(string));
    
            var begintimeParameter = begintime.HasValue ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(System.DateTime));
    
            var endtimeParameter = endtime.HasValue ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_RecordCenter_Result>("Rpt_RecordCenter", merchantidParameter, shopidsParameter, begintimeParameter, endtimeParameter);
        }
    
        public virtual ObjectResult<Rpt_ProductStorageStatistics_Result> Rpt_ProductStorageStatistics(string merchantid, string shopid, string begintime, string endtime, string productname, string productcode, string merchantbaseInfoid)
        {
            var merchantidParameter = merchantid != null ?
                new ObjectParameter("merchantid", merchantid) :
                new ObjectParameter("merchantid", typeof(string));
    
            var shopidParameter = shopid != null ?
                new ObjectParameter("shopid", shopid) :
                new ObjectParameter("shopid", typeof(string));
    
            var begintimeParameter = begintime != null ?
                new ObjectParameter("begintime", begintime) :
                new ObjectParameter("begintime", typeof(string));
    
            var endtimeParameter = endtime != null ?
                new ObjectParameter("endtime", endtime) :
                new ObjectParameter("endtime", typeof(string));
    
            var productnameParameter = productname != null ?
                new ObjectParameter("productname", productname) :
                new ObjectParameter("productname", typeof(string));
    
            var productcodeParameter = productcode != null ?
                new ObjectParameter("productcode", productcode) :
                new ObjectParameter("productcode", typeof(string));
    
            var merchantbaseInfoidParameter = merchantbaseInfoid != null ?
                new ObjectParameter("merchantbaseInfoid", merchantbaseInfoid) :
                new ObjectParameter("merchantbaseInfoid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rpt_ProductStorageStatistics_Result>("Rpt_ProductStorageStatistics", merchantidParameter, shopidParameter, begintimeParameter, endtimeParameter, productnameParameter, productcodeParameter, merchantbaseInfoidParameter);
        }
    }
}
